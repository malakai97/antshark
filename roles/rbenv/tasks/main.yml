- name: install ruby development package dependencies
  apt:
    pkg: "{{item}}"
    state: present
  with_items:
    - autoconf
    - bison
    - build-essential
    - libssl-dev
    - git
    - libyaml-dev
    - libreadline6-dev
    - zlib1g-dev
    - libsqlite3-dev
    - libncurses5-dev
    - libffi-dev
    - libgdbm5
    - libgdbm-dev

- name: download rbenv from git
  git:
    accept_hostkey: true
    repo: "{{rbenv_git}}"
    dest: "{{rbenv_dir}}"

- name: set rbenv permissions
  file:
    path: "{{rbenv_dir}}"
    mode: "o+rsXx"
    recurse: true

- name: create rbenv profile
  template:
    src: rbenv.sh.j2
    owner: root
    group: root
    mode: "u=rw,go=rx"
    dest: "{{rbenv_profile}}"

- name: create plugins directory
  file:
    path: "{{rbenv_dir}}/plugins"
    state: directory

- name: download rbenv-update
  git:
    accept_hostkey: true
    repo: "{{rbenv_rbenv_update_git}}"
    dest: "{{rbenv_dir}}/plugins/rbenv-update"

- name: download rbenv-aliases
  git:
    accept_hostkey: true
    repo: "{{rbenv_aliases_git}}"
    dest: "{{rbenv_dir}}/plugins/rbenv-aliases"

- name: download ruby-build
  git:
    accept_hostkey: true
    repo: "{{rbenv_ruby_build_git}}"
    dest: "{{rbenv_dir}}/plugins/ruby-build"

- name: set plugin permissions
  file:
    path: "{{rbenv_dir}}/plugins"
    mode: "o+rsXx"
    recurse: true

- name: get list of installed rubies
  shell: ". {{rbenv_profile}} && rbenv versions"
  register: rubies

- name: install rubies
  shell: ". {{rbenv_profile}} && rbenv install {{item}}"
  with_items: "{{rbenv_ruby_versions}}"
  when: item not in rubies.stdout


- name: set global ruby version
  shell: ". {{rbenv_profile}} && rbenv global {{rbenv_global_ruby_version}}"

- name: install bundler and pry
  shell: ". {{rbenv_profile}} && rbenv shell {{item}} && gem install bundler pry"
  with_items: "{{rbenv_ruby_versions}}"

